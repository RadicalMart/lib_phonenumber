name: "Continuous Integration"

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

jobs:
    phpunit:
        runs-on: ubuntu-20.04
        strategy:
            matrix:
                php-version:
                    - "7.2"
                    - "7.3"
                    - "7.4"
                    - "8.0"
                    - "8.1"
                    - "8.2"
                    - "8.3"

        name: PHP ${{ matrix.php-version }}

        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Setup PHP, with composer and extensions
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-version }}
                    extensions: mbstring, dom
                    coverage: xdebug

            -   name: Get composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache composer dependencies
                uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Install dependencies
                run: composer install --no-progress --prefer-dist --optimize-autoloader

            -   name: Setup problem matchers for PHP
                run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

            -   name: Setup problem matchers for PHPUnit
                run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            -   name: Configure matchers
                uses: mheap/phpunit-matcher-action@v1

            -   name: Test with PHPUnit
                run: ./vendor/bin/phpunit --no-coverage

    php-cs-fixer:
        runs-on: ubuntu-20.04

        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Setup PHP, with composer and extensions
                uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.1
                    extensions: mbstring, dom
                    coverage: xdebug
                    tools: cs2pr

            -   name: Get composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache composer dependencies
                uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Install dependencies
                run: composer install --no-progress --prefer-dist --optimize-autoloader

            -   name: Code style with PHP-CS-Fixer for lib
                run: ./vendor/bin/php-cs-fixer fix --dry-run --diff

            -   name: Code style with PHP-CS-Fixer for joomla
                run: ./vendor/bin/php-cs-fixer fix --dry-run --diff --config=.php-cs-fixer.joomla.php
